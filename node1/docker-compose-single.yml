version: '3.8'

services:
  zookeeper1:
    image: confluentinc/cp-zookeeper:latest
    restart: unless-stopped
    hostname: zookeeper1
    container_name: zookeeper1
    # extra_hosts:
    #   - "zookeeper1:192.168.0.101"
    #   - "zookeeper2:192.168.0.102"
    #   - "zookeeper3:192.168.0.103"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888
      ZOOKEEPER_MAX_CLIENT_CNXNS: 60
      ZOOKEEPER_DATA_DIR: /var/lib/zookeeper
      LOG_DIR: /var/log/zookeeper
    volumes:
      - /usr/share/zoneinfo/Asia/Seoul:/etc/localtime:ro
      - ./zookeeper-data/data:/var/lib/zookeeper/data
      - ./zookeeper-data/log:/var/lib/zookeeper/log
      - ./zookeeper-varlog:/var/log/zookeeper
    #network_mode: host
    networks:
      - kafka-net
    ports:
      - "2181:2181"

  kafka1:
    image: confluentinc/cp-kafka:latest
    restart: unless-stopped
    hostname: kafka1
    container_name: kafka1
    # extra_hosts:
    #   - "zookeeper1:192.168.0.101"
    #   - "zookeeper2:192.168.0.102"
    #   - "zookeeper3:192.168.0.103"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:2181/hyo-kafka/01"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DELETE_TOPIC_ENABLE: "true" # 삭제 표시만 남는 것이 아닌 실제로 토픽을 삭제한다.
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false" # 자동 토픽 생성 옵션인데, 불 필요한 토픽 생성을 방지할 수 있다.
      KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_DATA_DIR: /var/lib/kafka
      KAFKA_LOG_RETENTION_HOURS: 72
      LOG_DIR: /var/log/kafka
    volumes:
      - /usr/share/zoneinfo/Asia/Seoul:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka-data:/var/lib/kafka/data
      - ./kafka-varlog:/var/log/kafka
    depends_on:
      - zookeeper1
    #network_mode: host
    networks:
      - kafka-net
    ports:
      - "9092:9092"

  kafka_manager:
    image: hlebalbau/kafka-manager:stable
    restart: unless-stopped
    container_name: kafka_manager
    depends_on:
      - kafka1
      - zookeeper1
    environment:
      ZK_HOSTS: "zookeeper1:2181"
      APPLICATION_SECRET: "random-secret"
    command: -Dpidfile.path=/dev/null
    networks:
      - kafka-net
    ports:
      - "9000:9000"

networks:
  kafka-net:
    driver: bridge
